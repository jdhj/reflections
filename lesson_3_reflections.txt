When would you want to use a remote repository rather than keeping all your work
local?

    A remote repository allows others to share your work and contribute to it. 
    This also acts as a backup, and a useful way to access your own work from other
    locations/devices.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    An automatic pull for every update might introduce changes that affect your work.
    It would certainly be confusing to code from an unstable source that may change
    without warning. It seems to make more sense to complete your changes, test
    that everything is working, and then deal with the complications of integrating
    it into new versions in a more predictable manner.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    A clone is a process by which we take an identical copy of an existing 
	repository, usually, but not necessarily, on a remote computer. The full
	commit history is cloned along with all the files.

	A fork is similar to a clone but is done on github, creating a cloned
	repository also on github and maintaining a link between the two. This
	makes things easier in the event that commits need to be shared with the
	original. Also this link allows the originator of the repository to track
	how others use the material. A fork is done to allow us to make changes as
	necessary to our own copy of a repository which we can not make to the
	original.

	A branch is different in that it does not involve making a new copy of a
	repository, a branch is a label that is used within a git repo to track a
	chain of commits separately from the master or other chains. This allow
	different types of work, possibly by different authors to be done
	simultaneously without causing problems for each other. This type of branch
	will usually be merged back into the master branch at a later time. Also
	branches can be used when different versions of a program are required to
	be maintained permanently. In this case the branches are not merged back
	into the main branch.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    The local copy of the origin/master as at the point when the local
    repository was last updated from the remote gives a point of reference to
    all new commits so we can see clearly what changes we have made in total
    that are not yet on the remote. In addition, this reference point allows us
    to see changes that have been made remotely by others that now need to be
    incorporated into our work, hopefully automatically merged, or if not,
    conflicts resolved manually.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
